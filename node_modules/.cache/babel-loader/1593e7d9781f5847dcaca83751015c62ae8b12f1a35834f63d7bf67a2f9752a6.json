{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\veer jabak\\\\Desktop\\\\Project_Management_Tool-master\\\\frontend\\\\src\\\\components\\\\KanbanSection.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport KanbanTicket from './KanbanTicket';\nimport { useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanSection = props => {\n  _s();\n  const {\n    specifictickets,\n    sectionName,\n    setTickets\n  } = props;\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"ticket\",\n    drop: item => addItemToSection(item),\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }));\n  const addItemToSection = async item => {\n    const newStatus = sectionName;\n    const response = await fetch(`http://localhost:5000/api/project/update-ticket-status/${item.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        newStatus\n      })\n    });\n    const res = await response.json();\n    console.log(res);\n\n    //console.log(\"dropped\", item.id, sectionName, tickets);\n    // const mTickets = tickets.map( it => {\n    //     if(it._id === item.id){\n    //         console.log(\"found\", it.ticketNumber, it.ticketType, sectionName);\n    //         return {...it, ticketType: sectionName};\n    //     }\n    //     return it;\n    // })\n    // setTickets(mTickets);\n\n    setTickets(prevState => {\n      const newState = prevState.map(it => {\n        if (it._id === item.id) {\n          return {\n            ...it,\n            ticketStatus: sectionName\n          };\n        }\n        return it;\n      });\n      return newState;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: `col-md-3 float-left border rounded ${isOver ? \"bg-light\" : \"\"} `,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: sectionName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), Object.values(specifictickets).map(it => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(KanbanTicket, {\n          ticket: it\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, it._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanSection, \"J1zlkivqRCGcJFAnPMhlnYWlWR0=\", false, function () {\n  return [useDrop];\n});\n_c = KanbanSection;\nexport default KanbanSection;\nvar _c;\n$RefreshReg$(_c, \"KanbanSection\");","map":{"version":3,"names":["React","KanbanTicket","useDrop","jsxDEV","_jsxDEV","KanbanSection","props","_s","specifictickets","sectionName","setTickets","isOver","drop","accept","item","addItemToSection","collect","monitor","newStatus","response","fetch","id","method","headers","localStorage","getItem","body","JSON","stringify","res","json","console","log","prevState","newState","map","it","_id","ticketStatus","ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","ticket","_c","$RefreshReg$"],"sources":["C:/Users/veer jabak/Desktop/Project_Management_Tool-master/frontend/src/components/KanbanSection.js"],"sourcesContent":["import React from 'react'\nimport KanbanTicket from './KanbanTicket';\nimport { useDrop } from 'react-dnd';\n\nconst KanbanSection = (props) => {\n    const{specifictickets, sectionName, setTickets} = props;\n\n    const [{isOver}, drop] = useDrop(()=>({\n        accept: \"ticket\",\n        drop: (item) => addItemToSection(item),\n        collect: (monitor) => ({\n          isOver: !!monitor.isOver()\n        })\n    }))\n\n    const addItemToSection = async(item)=>{\n        const newStatus = sectionName;\n        const response = await fetch(`http://localhost:5000/api/project/update-ticket-status/${item.id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token' : localStorage.getItem('token')\n            },\n            body: JSON.stringify({newStatus})\n        });\n        const res = await response.json();\n        console.log(res);\n\n        //console.log(\"dropped\", item.id, sectionName, tickets);\n        // const mTickets = tickets.map( it => {\n        //     if(it._id === item.id){\n        //         console.log(\"found\", it.ticketNumber, it.ticketType, sectionName);\n        //         return {...it, ticketType: sectionName};\n        //     }\n        //     return it;\n        // })\n        // setTickets(mTickets);\n\n        setTickets(prevState => {\n            const newState = prevState.map(it=>{\n                if(it._id === item.id){\n                    return {...it, ticketStatus: sectionName}\n                }\n                return it;\n            })\n            return newState;\n        })\n    }\n\n    \n  return (\n    <div ref={drop} className={`col-md-3 float-left border rounded ${isOver ? \"bg-light\" : \"\"} `}>\n        <div>{sectionName}</div>\n        {\n        Object.values(specifictickets).map((it) => {\n        return (\n            <div key={it._id}>\n                <KanbanTicket ticket={it} />\n            </div>\n        );\n        })}\n    </div>\n  )\n}\n\nexport default KanbanSection"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAK;IAACC,eAAe;IAAEC,WAAW;IAAEC;EAAU,CAAC,GAAGJ,KAAK;EAEvD,MAAM,CAAC;IAACK;EAAM,CAAC,EAAEC,IAAI,CAAC,GAAGV,OAAO,CAAC,OAAK;IAClCW,MAAM,EAAE,QAAQ;IAChBD,IAAI,EAAGE,IAAI,IAAKC,gBAAgB,CAACD,IAAI,CAAC;IACtCE,OAAO,EAAGC,OAAO,KAAM;MACrBN,MAAM,EAAE,CAAC,CAACM,OAAO,CAACN,MAAM,CAAC;IAC3B,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,MAAMI,gBAAgB,GAAG,MAAMD,IAAI,IAAG;IAClC,MAAMI,SAAS,GAAGT,WAAW;IAC7B,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAE,0DAAyDN,IAAI,CAACO,EAAG,EAAC,EAAE;MAC9FC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;MAC/C,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACV;MAAS,CAAC;IACpC,CAAC,CAAC;IACF,MAAMW,GAAG,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IACjCC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;;IAEhB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAnB,UAAU,CAACuB,SAAS,IAAI;MACpB,MAAMC,QAAQ,GAAGD,SAAS,CAACE,GAAG,CAACC,EAAE,IAAE;QAC/B,IAAGA,EAAE,CAACC,GAAG,KAAKvB,IAAI,CAACO,EAAE,EAAC;UAClB,OAAO;YAAC,GAAGe,EAAE;YAAEE,YAAY,EAAE7B;UAAW,CAAC;QAC7C;QACA,OAAO2B,EAAE;MACb,CAAC,CAAC;MACF,OAAOF,QAAQ;IACnB,CAAC,CAAC;EACN,CAAC;EAGH,oBACE9B,OAAA;IAAKmC,GAAG,EAAE3B,IAAK;IAAC4B,SAAS,EAAG,sCAAqC7B,MAAM,GAAG,UAAU,GAAG,EAAG,GAAG;IAAA8B,QAAA,gBACzFrC,OAAA;MAAAqC,QAAA,EAAMhC;IAAW;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAExBC,MAAM,CAACC,MAAM,CAACvC,eAAe,CAAC,CAAC2B,GAAG,CAAEC,EAAE,IAAK;MAC3C,oBACIhC,OAAA;QAAAqC,QAAA,eACIrC,OAAA,CAACH,YAAY;UAAC+C,MAAM,EAAEZ;QAAG;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADtBT,EAAE,CAACC,GAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CAAC;IAEV,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAAtC,EAAA,CA3DKF,aAAa;EAAA,QAGUH,OAAO;AAAA;AAAA+C,EAAA,GAH9B5C,aAAa;AA6DnB,eAAeA,aAAa;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}